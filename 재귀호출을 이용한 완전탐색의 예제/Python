# 함수 생성 
def getResult(x, n, r):
  # x의 길이가 알파벳의최대 열보다 길거나 같을때 결과 출력 
  if x >= r:
    for j in range(r):
      print(result[j], end=" ")
    print()
  # 그렇지 않은경우 반복문을 통해 index x번째의 알파벳을 채워줌 
  else: 
    for i in range(n):
      # 아스키 코드를 통해서 소문자 알파벳 저장 
      character = chr(97 + i)
      # x번째 알파벳이 비어 있는 경우 아스키 코드를 통해 저장한 알파벳을 넣어주고 알파벳의 사용여부 저장
      if check[i] == 0:
        result[x] = character
        check[i] = -1
        # 재귀 함수를 통해 x+1 번째 알파벳을 구함 
        getResult(x+1, n, r)
        # 반복문이 끝나기 전에 다른 알파벳의 경우의 수를 위해서 초기화 
        check[i] = 0
        result[x] = 0 
      
# 알파벳의 개수와 문자열의 길이 입력 
n, r = map(int, input().split())
# 문자열과 알파벳 사용여부를 초기화
result  = [0] * 105 
check = [0] * 105 

# 함수 실행
getResult(0, n, r)
