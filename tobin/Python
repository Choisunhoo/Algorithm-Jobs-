# 재귀함수를 통해서 n개의 수열에서 k개의 1이 있어야 하는 수이다
# 순서는 4 2 기준으로 1100 1010 1001 0110 0101 0011 순이다

# 정수 2개를 입력 
n, k = map(int, input().split())
# n의 개수만큼 0을 포함한 리스트 생성 
numbers = [0] * n 

# 순열함수 시작 (x(숫자열), cnt(1의개수))
def permutation(x, cnt):
    # 만약 숫자열의 개수가 4와 같고 1의 개수가 k와 같으면 반복문을 통해서 출력 
    if x >= n:
        if k == cnt:
            for i in range(n):
                print(numbers[i], end="")
            print()
    # 만약 숫자열의 개수가 n보다 작으면 조건에 따라 숫자열을 추가해줌
    if x < n:
        만약 1의 개수가 k보다 적은 경우에는 숫자열에 1을 더해주고 재귀함수를 숫자열 추가 1의 개수 추가로 해줌
        if cnt < k:
            numbers[x] = 1 
            permutation(x+1, cnt+1)  
            그후 다시 숫자열을 초기화 
            numbers[x] = 0
        숫자열을 0으로 초기화 한 상태에서 숫자열을 1 추가 시켜준 상태로 1의 개수는 그대로인 상태로 재귀함수 
        permutation(x+1, cnt)

# 숫자열 0 개 1의 개수 0개로 함수시작 
permutation(0, 0)
