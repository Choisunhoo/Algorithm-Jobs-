from collections import deque
def bfs(x, y, graph):
    queue = deque()
    queue.append((x, y))

    dx = [-1, 1, 0, 0]
    dy = [0, 0, -1, 1]
    graph[x][y] = "0"

    while queue:
        x, y = queue.popleft()

        for i in range(4):
            nx = x + dx[i]
            ny = y + dy[i]

            if 0 <= nx < len(graph) and 0 <= ny < len(graph[0]) and graph[nx][ny] == "1":
                graph[nx][ny] = "0" 
                queue.append((nx, ny))


def solution(grid):
    answer = 0

    for i in range(len(grid)):
        for j in range(len(grid[0])):
            if grid[i][j] == "1":
                answer += 1
                bfs(i, j, grid)

    return answer
