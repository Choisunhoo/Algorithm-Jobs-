# n명의 사람중 m명을 순서에 상관없이 뽑는 경우의 수를 조합이라고 하며 nCm로 나타낸다. 이를 구하는 수식은 n!/m!(n-m)!
# n과 m이 주어졌을때 nCm의 끝자리 0의 개수를 출력하는 프로그램을 작성하시오.  
# 끝의 자리가 0의 개수를 출력하라는 것은 nCm를 10으로 몇번 나눌 수 있는가를 찾는 문제이다 
# 펙토리얼의 특징을 이용해서 답을 구하는 것이다 
# 예를들면 5의 팩토리얼은 1 2 3 4 5 를 전부 곱해서 구할수 있다. 
# 여기서 2가 몇개 있는지를 구하는 방법은 1 2 3 4 5에 각각 2가 몇번 있는지를 찾는 것이다 
# 1 에 들어갈수 있는 2의 개수는 0/ 1 - 0개 / 2 - 1개 / 3 - 0개 / 4 - 2개/ 5 - 0 개 이다 
# 실제로 5의 팩토리얼은 120 이고 2 로 나누면 60 또 2로나누면 30 또 2로 나누면 15로 2가 총 3개 들어가 있고 이는 앞에서 구한 2/1 + 4/2의 값과 같다 
# 이러한 방법을 이용하여서 n, m, n-m 에 있는 2와 5를 구해서 def (n) - def(m) - def(n-m)를 한뒤 10 이 되려면 2와 5 가 전부 있어야 하니 2와 5중에 적은 값을 구하는게 정답이 된다.


# 함수 생성 (팩토리얼로 구할 수 와 나눌 수를 입력)
def comb(N, M):
    # M의 개수를 저장할 변수 초기화 
    cnt = 0 
    # 반복문을 통해서 2부터 N까지 하나씩 구해줌 
    for i in range(2, N+1):
        # i를 예비 변수에 저장 
        temp = i 
        # temp라는 예비 변수가 M의로 나누어 질때 까지 반복문을 지속
        while temp % M == 0:
            # 반복문을 실행할때마다 개수를 추가 및 예비 변수를 M으로 나누어줌 
            cnt += 1
            temp //= M
    # 모든 반복문이 끝나면 M의 개수를 저장한 변수를 반환
    return cnt

# n명의 사람과 그중에서 m명을 뽑을 지를 입력 
n, m = map(int, input().split())

# 함수를 사용해서 nCm에 2가 몇개 있는지를 구함
two_cnt = comb(n, 2) - comb(m, 2) - comb(n-m, 2)
# 함수를 사용해서 nCm에 5가 몇개 있는지를 구함
five_cnt = comb(n, 5) - comb(m, 5) - comb(n-m, 5)

# min함수를 통해서 둘중에 작은 값을 정답으로 출력 
print(min(two_cnt, five_cnt))
