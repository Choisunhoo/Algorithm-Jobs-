from collections import deque

n, m = map(int, input().split())
data = [list(map(int, input().split())) for _ in range(n)]
dp = [[0] * m for _ in range(n)]
dp[0][0] = data[0][0]

def bfs(x, y):
    queue = deque()
    queue.append([x, y])
    dx = [1, 0]
    dy = [0, 1]
    while queue:
        x, y = queue.popleft()
        for i in range(2):
            nx = x + dx[i]
            ny = y + dy[i]
            if 0 <= nx < n and 0<= ny < m:
                dp[nx][ny] = max(dp[nx][ny], dp[x][y] + data[nx][ny])
                queue.append([nx, ny])
                

bfs(0, 0)
print(dp[n-1][m-1])
